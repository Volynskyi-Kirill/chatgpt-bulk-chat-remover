(function () {
  'use strict';

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é fetch
  const originalFetch = window.fetch;

  // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º fetch –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ —Ç–æ–∫–µ–Ω–∞
  window.fetch = async function (resource, options) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Authorization –≤ –∑–∞–ø—Ä–æ—Å–µ
    if (options && options.headers && options.headers.Authorization) {
      const authorizationHeader = options.headers.Authorization;
      const tokenMatch = authorizationHeader.match(/Bearer\s+(.+)/i);

      if (tokenMatch) {
        const extractedToken = tokenMatch[1];
        console.log(
          'üóùÔ∏è –¢–æ–∫–µ–Ω –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω –∏–Ω—ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–∫—Ä–∏–ø—Ç–æ–º:',
          extractedToken
        );

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –≤ content script —á–µ—Ä–µ–∑ postMessage
        window.postMessage(
          {
            type: 'GPT_TOKEN_CAPTURED',
            token: extractedToken,
          },
          '*'
        );
      }
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π fetch –∑–∞–ø—Ä–æ—Å
    return originalFetch.call(this, resource, options);
  };

  console.log('üîß Fetch –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
})();
